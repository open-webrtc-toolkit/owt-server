# Set root logger level to DEBUG and its only appender to A1.
log4j.rootLogger=DEBUG, A1

# A1 is set to be a ConsoleAppender.
log4j.appender.A1=org.apache.log4j.ConsoleAppender

# A1 uses PatternLayout.
log4j.appender.A1.layout=org.apache.log4j.PatternLayout
# Print the date in ISO 8601 format
log4j.appender.A1.layout.ConversionPattern=%d  - %p: %c - %m%n

log4j.logger.WebRtcConnection=DEBUG
log4j.logger.SrtpChannel=ERROR
log4j.logger.SdpInfo=INFO
log4j.logger.NiceConnection=INFO
log4j.logger.DtlsTransport=INFO
log4j.logger.Resender=INFO
log4j.logger.SdesTransport=INFO
log4j.logger.Stats=INFO

log4j.logger.dtls.DtlsSocket=INFO
log4j.logger.dtls.DtlsFactory=INFO
log4j.logger.dtls.SSL=ERROR
log4j.logger.dtls.DtlsSocketContext=INFO

log4j.logger.media.InputProcessor=DEBUG
log4j.logger.media.OutputProcessor=DEBUG
log4j.logger.media.ExternalInput=DEBUG
log4j.logger.media.ExternalOutput=DEBUG

log4j.logger.rtp.RtpVP8Fragmenter=DEBUG
log4j.logger.rtp.RtpVP8Parser=DEBUG
log4j.logger.rtp.RtpPacketQueue=INFO

log4j.logger.media.mixers.VideoUtils=DEBUG

log4j.logger.media.codecs.VideoEncoder=DEBUG
log4j.logger.media.codecs.VideoDecoder=DEBUG
log4j.logger.media.codecs.AudioEncoder=DEBUG
log4j.logger.media.codecs.AudioDecoder=DEBUG


# The utility to handle the received RTP packets from the browser,
# to handle the FEC/RED packets, generate NACK requests upon packet loss, and
# count receive statistics (packet loss etc.) for RTCP Receiver feedback generation, etc.
log4j.logger.woogeen.ProtectedRTPReceiver=INFO

# The utility to handle the RTP packets sent to the browser,
# to construct the FEC/RED packets if necessary, resend lost packets, and
# count send statistics (bitrate etc.) for internal QoS parameters adjustment, etc.
log4j.logger.woogeen.ProtectedRTPSender=INFO

# The raw UDP and TCP transports which are used for the connection between the Gateway and AVS.
log4j.logger.woogeen.RawTransport=INFO

# The VideoFeedbackReactor is used to connect the WebRTCFeedbackProcessor and
# the ProtectedRTPSender; the WebRTCFeedbackProcessor handles the received RTCP
# feedback from the browser including the receiver report and the NACK message,
# calculate RTT and browser packet loss, adjust target send bitrate and pass the
# information to the VideoFeedbackReactor, which will adjust the (FEC) protection parameters
# according to the RTT, the target send bitrate and the actual bitrate from the
# ProtectedRTPSender statistics, and notify ProtectedRTPSender about the new parameters.
log4j.logger.woogeen.VideoFeedbackReactor=INFO
log4j.logger.woogeen.WebRTCFeedbackProcessor=INFO

log4j.logger.woogeen.VCMFrameConstructor=DEBUG
log4j.logger.woogeen.VCMFrameDecoder=DEBUG
log4j.logger.woogeen.EncodedVideoFrameSender=DEBUG

log4j.logger.mcu.ExternalInputGateway=DEBUG
log4j.logger.mcu.MediaMuxerFactory=DEBUG
log4j.logger.mcu.Mixer=DEBUG
log4j.logger.mcu.WebRTCGateway=DEBUG

log4j.logger.mcu.media.AudioMixer=DEBUG
log4j.logger.mcu.media.BufferManager=DEBUG
log4j.logger.mcu.media.ExternalOutput=DEBUG
log4j.logger.mcu.media.HardwareVideoFrameMixer=DEBUG
log4j.logger.mcu.media.MediaRecorder=DEBUG
log4j.logger.mcu.media.SoftVideoCompositor=DEBUG
log4j.logger.mcu.media.VCMOutputProcessor=DEBUG
log4j.logger.mcu.media.VideoLayoutProcessor=DEBUG
log4j.logger.mcu.media.VideoMixer=DEBUG
