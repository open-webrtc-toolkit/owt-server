User can customize their own GStreamer pipeline as a share library to use in OWT.
To make it work well in OWT, please follow rules below:
1. The first src plugin should be appsrc plugin so that we can use streams published to OWT server and then do analytics
2. You can set different properties for each pipeline in analytics/plugin.cfg file as below:

[dc51138a8284436f873418a21ba8cfa7] //pipeline id
description = 'dummy plugin'
name = 'libSamplePipeline.so'  //GStreamer pipeline share library name
modelpath = '/mnt/models/pedestrian-detection-adas-0002-fp16.xml'    # inference model path
inferencewidth = 672    # inference input width.
inferenceheight = 384   # inference input height.

[dc51138a8284436f873418a21ba8cfa6] //pipeline id
description = 'detect plugin'
name = 'libDetectPipeline.so'  //GStreamer pipeline share library name
libpath = 'pluginlibs/'
configpath = 'pluginlibs/'
modelpath = '/mnt/models/pedestrian-detection-adas-0002-fp16.xml'    # inference model path
inferencewidth = 672    # inference input width.
inferenceheight = 384   # inference input height.
inferenceframerate = 5  # inference input framerate
device = "MULTI:HDDL,CPU"

3. Run build_samples.sh in samples folder to compile and generated related GStreamer pipeline share library. After compile successfully, copy share libraries generated in samples/build/intel64/Release/lib/ to analytics_agent/lib/ folder in OWT package.
